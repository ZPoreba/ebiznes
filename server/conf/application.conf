play.http.secret.key = "changeme"

play.i18n {
  langs = [ "en" ]
}

play.filters.cors {
    pathPrefixes = ["/"]
    allowedOrigins = null
    allowedHttpMethods = null
    allowedHttpHeaders = null
    exposedHeaders = ["Access-Control-Allow-Origin"]
    preflightMaxAge = 3 days
}

libraryDependencies += evolutions

play.evolutions {
  enabled = true
  db.default.enabled =true
}

slick.dbs.default.driver="slick.driver.SQLiteDriver$"
slick.dbs.default.db.driver="org.sqlite.JDBC"
slick.dbs.default.db.url="jdbc:sqlite:ebiznes.sqlite"

play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"
play.http.filters = "utils.Filters"
play.modules.enabled += "modules.SilhouetteModule"

play.filters.headers.allowActionSpecificHeaders = true
play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.csp.CSPFilter = "default-src 'self'; img-src 'self' data: fbcdn-profile-a.akamaihd.net *.twimg.com *.googleusercontent.com *.facebook.com *.twitter.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com; style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com; font-src 'self' data: fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' clef.io; connect-src 'self' http://localhost:8080 https://localhost:8080 ws://localhost:8080 ws://localhost:9000 *.facebook.com accounts.google.com twitter.com *.xing.com; frame-src clef.io"

# Security Filter Configuration - CORS
# https://stackoverflow.com/questions/45558233/getting-cors-errors-in-scala-play-framework-v2-6-x


play.filters.csrf.bypassCorsTrustedOrigins = false
play.filters.csrf.cookie.name="PLAY_CSRF_TOKEN" // We store the CSRF token in a cookie instead of the session so that UI app can read it
play.filters.csrf.contentType.blackList=[ // We would also check AJAX requests from type application/json
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain",
  "application/json"
]

play.filters.cors.serveForbiddenOrigins = true
play.filters.headers.allowActionSpecificHeaders = true

play.filters.cors {
    allowedOrigins = null
    allowedHttpMethods = ["GET", "POST", "OPTIONS", "PUT", "DELETE"]
    allowedHttpHeaders = ["Authorization", "Cache-Control", "Access-Control-Allow-Headers", "Origin,Accept", "X-Requested-With", "Content-Type", "Access-Control-Request-Method", "Access-Control-Request-Headers"]
}

play.http.session.httpOnly=false
play.filters.enabled += "play.filters.csrf.CSRFFilter"

include "silhouette.conf"